name: Deploy to ASG via CloudFormation

on:
  push:
    branches: [ main ]

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      - name: Base64 encode HTML content
        id: encode
        run: |
          if [ ! -s app/index.html ]; then
            echo "‚ùå index.html is empty. Aborting deployment."
            exit 1
          fi
          HTML_CONTENT=$(base64 -w 0 app/index.html)
          echo "HTML_CONTENT=$HTML_CONTENT" >> $GITHUB_ENV

      - name: Update CloudFormation stack
        run: |
          aws cloudformation deploy \
            --template-file infra/max-app.yml \
            --stack-name MaxInfra \
            --capabilities CAPABILITY_IAM \
            --parameter-overrides \
                KeyName=max-app-key \
                InstanceType=t2.micro \
                AppName=max-app \
                HtmlContent=$HTML_CONTENT

      - name: Trigger ASG instance refresh (rolling, minimal downtime)
        run: |
          # Get ASG name from CloudFormation outputs
          ASG_NAME=$(aws cloudformation describe-stacks \
            --stack-name MaxInfra \
            --query "Stacks[0].Outputs[?OutputKey=='AutoScalingGroupName'].OutputValue" \
            --output text)

          if [ -z "$ASG_NAME" ]; then
            echo "‚ùå ASG name not found in stack outputs. Make sure your template outputs it."
            exit 1
          fi

          echo "üîç Checking existing instance refresh for ASG: $ASG_NAME"
          REFRESH_STATUS=$(aws autoscaling describe-instance-refreshes \
            --auto-scaling-group-name "$ASG_NAME" \
            --query "InstanceRefreshes[0].Status" \
            --output text 2>/dev/null || echo "None")

          if [ "$REFRESH_STATUS" == "InProgress" ]; then
            echo "‚ö†Ô∏è Existing instance refresh already in progress ‚Äî leaving it to complete to avoid downtime."
            exit 0
          fi

          echo "üöÄ Starting new rolling instance refresh for ASG: $ASG_NAME"
          aws autoscaling start-instance-refresh \
            --auto-scaling-group-name "$ASG_NAME" \
            --preferences '{"MinHealthyPercentage":90,"InstanceWarmup":60}'

          echo "‚úÖ Instance refresh started successfully for $ASG_NAME"
